{\rtf1\ansi\ansicpg1252\cocoartf2639
\cocoatextscaling0\cocoaplatform0{\fonttbl\f0\froman\fcharset0 Times-Roman;}
{\colortbl;\red255\green255\blue255;\red0\green0\blue0;}
{\*\expandedcolortbl;;\cssrgb\c0\c0\c0;}
\margl1440\margr1440\vieww11520\viewh8400\viewkind0
\deftab720
\pard\pardeftab720\partightenfactor0

\f0\fs24 \cf0 \expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 import streamlit as st\
\
# Embedded data directly in the app (replace with your actual data)\
hypertension_data = [\
    \{"Risk Level": "High Risk", "Recommendation": "Medication", "Details": "Initiate antihypertensive therapy."\},\
    \{"Risk Level": "Moderate Risk", "Recommendation": "Lifestyle Modification", "Details": "Encourage diet and exercise."\},\
    \{"Risk Level": "Low Risk", "Recommendation": "Monitoring", "Details": "Follow-up every 6 months."\},\
    # Add more rows as necessary\
]\
\
# Set up the Streamlit app\
st.title("Hypertension Risk Stratification App")\
st.write("This tool helps calculate hypertension risk levels and provides management recommendations.")\
\
# Create form for user inputs\
with st.form("risk_assessment_form"):\
    st.subheader("Enter Patient Information")\
    age = st.number_input("Age", min_value=0, max_value=120, step=1)\
    blood_pressure = st.number_input("Blood Pressure (mmHg)", min_value=80, max_value=200, step=1)\
    bmi = st.number_input("BMI", min_value=10.0, max_value=50.0, step=0.1)\
    smoking_status = st.selectbox("Smoking Status", options=["Non-smoker", "Occasional smoker", "Current smoker"])\
    submit_button = st.form_submit_button(label="Calculate Risk")\
\
# Calculate risk level based on user inputs\
if submit_button:\
    # Logic based on risk criteria from embedded data\
    if age >= 60 or blood_pressure >= 140 or bmi >= 30 or smoking_status == "Current smoker":\
        risk_level = "High Risk"\
    elif 45 <= age < 60 or 120 <= blood_pressure < 140 or 25 <= bmi < 30 or smoking_status == "Occasional smoker":\
        risk_level = "Moderate Risk"\
    else:\
        risk_level = "Low Risk"\
    \
    st.subheader("Risk Level")\
    st.write(f"The calculated risk level is: **\{risk_level\}**")\
\
    # Display relevant management recommendations based on the risk level\
    st.subheader("Management Recommendations")\
    \
    # Filter recommendations based on risk level\
    recommendations = [item for item in hypertension_data if item["Risk Level"] == risk_level]\
    if recommendations:\
        for rec in recommendations:\
            st.write(f"**\{rec['Recommendation']\}**: \{rec['Details']\}")\
    else:\
        st.write("No specific recommendations found for this risk level.")\
}